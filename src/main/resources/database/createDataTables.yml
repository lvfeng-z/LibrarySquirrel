tables:
  - name: local_author
    sql: |
     create table if not exists local_author (
       id                integer not null
       constraint local_author_pk
       primary key autoincrement,
       local_author_name text,
       create_time       integer,
       update_time       integer
     );

  - name: site_author
    sql: |
      create table if not exists site_author (
        id                      integer not null
        constraint site_author_pk
        primary key autoincrement,
        site_id                 integer,
        site_author_id          text,
        site_author_name        text,
        site_author_name_before text,
        introduce               text,
        local_author_id         integer,
        create_time             integer,
        update_time             integer,
        constraint site_author_unique_site_id_site_author_id
        unique (site_id, site_author_id)
      );

  - name: poi
    sql: |
      create table if not exists poi (
        id                integer not null
        constraint poi_pk
        primary key autoincrement,
        poi_name text,
        create_time       integer,
        update_time       integer
      );

  - name: re_poi_target
    sql: |
      create table if not exists re_poi_target (
        id          integer not null
        constraint poi_target_pk
        primary key autoincrement,
        poi_id      integer,
        target_id   integer,
        target_type text,
        create_time integer,
        update_time integer
      );

  - name: re_works_author
    sql: |
      create table re_works_author (
        id              integer not null
        constraint re_works_author_pk
        primary key autoincrement,
        type            integer,
        works_id        integer
        constraint re_works_author_works_id_fk
        references works
        on update cascade on delete cascade,
        local_author_id integer
        constraint re_works_author_local_author_id_fk
        references local_author
        on update cascade on delete cascade,
        site_author_id  text
        constraint re_works_author_site_tag_id_fk
        references site_tag
        on update cascade on delete cascade,
        author_role     integer,
        create_time     integer,
        update_time     integer
      );

  - name: re_works_tag
    sql: |
      create table re_works_tag (
        id           integer not null
        constraint works_tag_pk
        primary key autoincrement,
        works_id     integer
        constraint re_works_tag_works_id_fk
        references works
        on delete cascade,
        tag_type     integer,
        local_tag_id integer
        constraint re_works_tag_local_tag_id_fk
        references local_tag
        on delete cascade,
        site_tag_id  integer
        constraint re_works_tag_site_tag_id_fk
        references site_tag,
        create_time  integer,
        update_time  integer,
        constraint re_works_tag_unique_local_tag_id
        unique (works_id, local_tag_id),
        constraint re_works_tag_unique_site_tag_id
        unique (works_id, site_tag_id)
      );

  - name: site
    sql: |
      create table if not exists site (
        id            integer not null
        constraint site_pk
        primary key autoincrement,
        site_name     text,
        site_domain   text,
        site_homepage text,
        create_time   integer,
        update_time   integer,
        sort_num      integer
      );

  - name: local_tag
    sql: |
      create table if not exists local_tag (
        id                integer not null
        constraint local_tag_pk
        primary key autoincrement,
        local_tag_name    text,
        base_local_tag_id integer,
        create_time       integer,
        update_time       integer
      );

  - name: site_tag
    sql: |
      create table if not exists site_tag (
        id               integer not null
        constraint site_tag_pk
        primary key autoincrement,
        site_id          integer,
        site_tag_id      text,
        site_tag_name    text,
        base_site_tag_id text,
        description      text,
        local_tag_id     integer,
        create_time      integer,
        update_time      integer,
        constraint site_tag_unique_site_id_site_tag_id
        unique (site_id, site_tag_id)
      );

  - name: task
    sql: |
      create table if not exists task (
        id             integer not null
        constraint task_pk
        primary key autoincrement,
        is_collection  integer(1),
        parent_id      integer,
        task_name      text,
        site_domain    text,
        local_works_id integer,
        site_works_id  text,
        url            text,
        create_time    integer,
        update_time    integer,
        status         smallint,
        plugin_id      integer,
        plugin_info    text,
        plugin_data    text
      );

  - name: task_plugin_listener
    sql: |
      create table task_plugin_listener (
        id          integer not null
        constraint task_plugin_listener_pk
        primary key,
        plugin_id   integer
        constraint task_plugin_listener_installed_plugins_id_fk
        references installed_plugins
        on delete cascade,
        listener    text,
        create_time integer,
        update_time integer
      );

  - name: works
    sql: |
      create table if not exists works (
        id               integer not null
        constraint works_pk
        primary key autoincrement,
        file_path             text,
        filename_extension    text,
        workdir               text,
        set_id                integer,
        site_id               integer,
        site_works_id         text,
        site_works_name       text,
        site_author_id        text,
        site_work_description text,
        site_upload_time      integer,
        site_update_time      integer,
        nick_name             text,
        works_site_id         integer,
        local_author_id       integer,
        include_mode          integer,
        include_task_id       integer,
        last_viewed           integer,
        create_time           integer,
        update_time           integer
      );

  - name: works_set
    sql: |
      create table if not exists works_set (
        id                   integer not null
        constraint works_pk
        primary key autoincrement,
        site_id              integer,
        site_works_set_id    text,
        site_works_set_name  text,
        site_author_id       text,
        site_upload_time     integer,
        site_update_time     integer,
        nick_name            text,
        include_mode         integer,
        include_task_id      integer,
        last_viewed          integer,
        create_time          integer,
        update_time          integer
      );

  - name: installed_plugins
    sql: |
      create table installed_plugins
      (
        id          integer not null
        constraint installed_plugins_pk
        primary key autoincrement,
        type        integer,
        author      text,
        domain      text,
        version     text,
        className   text,
        create_time integer,
        update_time integer,
        sort_num    integer
      );
